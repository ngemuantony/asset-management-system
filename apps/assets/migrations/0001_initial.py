# Generated by Django 5.1.3 on 2024-11-26 17:45

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('categories', '0001_initial'),
        ('departments', '0001_initial'),
        ('tags', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('version', models.IntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('deactivated_at', models.DateTimeField(blank=True, null=True)),
                ('asset_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('purchase_date', models.DateField()),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('asset_status', models.CharField(choices=[('AVAILABLE', 'Available'), ('ASSIGNED', 'Assigned'), ('MAINTENANCE', 'Under Maintenance'), ('RETIRED', 'Retired')], default='AVAILABLE', max_length=20)),
                ('manufacturer', models.CharField(blank=True, max_length=100)),
                ('model_number', models.CharField(blank=True, max_length=50)),
                ('serial_number', models.CharField(blank=True, max_length=50)),
                ('warranty_expiry', models.DateField(blank=True, null=True)),
                ('maintenance_schedule', models.DateField(blank=True, null=True)),
                ('last_maintenance', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='asset_qr_codes/')),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('ASSIGNED', 'Assigned'), ('MAINTENANCE', 'Under Maintenance'), ('RETIRED', 'Retired')], default='AVAILABLE', max_length=20)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_assets', to='users.userprofile')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assets', to='categories.category')),
                ('deactivated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deactivations', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asset_set', to='departments.department')),
                ('last_modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modifications', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, to='tags.tag')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AssetAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('PENDING', 'Pending'), ('ARCHIVED', 'Archived'), ('DELETED', 'Deleted')], default='ACTIVE', max_length=20)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('version', models.IntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('deactivated_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_date', models.DateTimeField(auto_now_add=True)),
                ('return_date', models.DateTimeField(blank=True, null=True)),
                ('expected_return_date', models.DateField(blank=True, null=True)),
                ('assignment_notes', models.TextField(blank=True)),
                ('return_notes', models.TextField(blank=True)),
                ('return_condition', models.TextField(blank=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_history', to='assets.asset')),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asset_assignments_made', to='users.userprofile')),
                ('assigned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asset_assignments', to='users.userprofile')),
                ('deactivated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deactivations', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-assigned_date'],
            },
        ),
        migrations.CreateModel(
            name='AssetMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('PENDING', 'Pending'), ('ARCHIVED', 'Archived'), ('DELETED', 'Deleted')], default='ACTIVE', max_length=20)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('version', models.IntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('deactivated_at', models.DateTimeField(blank=True, null=True)),
                ('maintenance_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('maintenance_type', models.CharField(choices=[('PREVENTIVE', 'Preventive Maintenance'), ('CORRECTIVE', 'Corrective Maintenance'), ('INSPECTION', 'Inspection'), ('CALIBRATION', 'Calibration'), ('OTHER', 'Other')], default='PREVENTIVE', max_length=20)),
                ('maintenance_date', models.DateTimeField()),
                ('description', models.TextField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('next_maintenance_date', models.DateField(blank=True, null=True)),
                ('attachments', models.FileField(blank=True, null=True, upload_to='maintenance_docs/')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='assets.asset')),
                ('deactivated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deactivations', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modifications', to=settings.AUTH_USER_MODEL)),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_performed', to='users.userprofile')),
            ],
            options={
                'ordering': ['-maintenance_date'],
            },
        ),
        migrations.CreateModel(
            name='AssetRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('PENDING', 'Pending'), ('ARCHIVED', 'Archived'), ('DELETED', 'Deleted')], default='ACTIVE', max_length=20)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('version', models.IntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('deactivated_at', models.DateTimeField(blank=True, null=True)),
                ('request_status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('DECLINED', 'Declined')], default='PENDING', max_length=20)),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('response_date', models.DateTimeField(blank=True, null=True)),
                ('expected_return_date', models.DateField()),
                ('purpose', models.TextField()),
                ('response_notes', models.TextField(blank=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asset_approvals', to='users.userprofile')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='assets.asset')),
                ('deactivated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deactivations', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modifications', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_requests', to='users.userprofile')),
            ],
            options={
                'ordering': ['-request_date'],
            },
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['asset_id'], name='assets_asse_asset_i_501f65_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['asset_status'], name='assets_asse_asset_s_54f785_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['category'], name='assets_asse_categor_7db38a_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['department'], name='assets_asse_departm_eda949_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['assigned_to'], name='assets_asse_assigne_8034d6_idx'),
        ),
        migrations.AddIndex(
            model_name='assetmaintenance',
            index=models.Index(fields=['maintenance_date'], name='assets_asse_mainten_7e1ac6_idx'),
        ),
        migrations.AddIndex(
            model_name='assetmaintenance',
            index=models.Index(fields=['maintenance_type'], name='assets_asse_mainten_af1dd2_idx'),
        ),
        migrations.AddIndex(
            model_name='assetmaintenance',
            index=models.Index(fields=['maintenance_id'], name='assets_asse_mainten_90be1e_idx'),
        ),
    ]
